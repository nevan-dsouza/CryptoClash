{"ast":null,"code":"var _jsxFileName = \"/Users/nevandsouza/Desktop/BS-bootcamp/Graded Submissions/Capstone/CryptoClash/client/src/components/SecretWordSelection/SecretWordSelection.js\",\n  _s = $RefreshSig$();\nimport './SecretWordSelection.css';\nimport React, { useState, useEffect } from 'react';\nimport socket from '../../socket';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SecretWordSelection = _ref => {\n  _s();\n  let {\n    onFinish\n  } = _ref;\n  const [wordOptions, setWordOptions] = useState([]);\n  const [selectedWord, setSelectedWord] = useState('');\n  useEffect(() => {\n    const fetchWordOptions = async () => {\n      try {\n        const response = await axios.get('https://api.datamuse.com/words?ml=cryptocurrency&max=5');\n        setWordOptions(response.data.map(wordObj => wordObj.word));\n      } catch (error) {\n        console.error(`Error fetching word options: ${error}`);\n      }\n    };\n    fetchWordOptions();\n  }, []);\n  const handleSelectWord = word => {\n    setSelectedWord(word);\n    socket.emit('selectSecretWord', word);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"secret-word-selection\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select a secret word:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: wordOptions.map(word => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleSelectWord(word),\n        children: word\n      }, word, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(SecretWordSelection, \"eG7IxykLqKvg253h4wt0RyK1RZ8=\");\n_c = SecretWordSelection;\nexport default SecretWordSelection;\nvar _c;\n$RefreshReg$(_c, \"SecretWordSelection\");","map":{"version":3,"names":["React","useState","useEffect","socket","axios","jsxDEV","_jsxDEV","SecretWordSelection","_ref","_s","onFinish","wordOptions","setWordOptions","selectedWord","setSelectedWord","fetchWordOptions","response","get","data","map","wordObj","word","error","console","handleSelectWord","emit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/nevandsouza/Desktop/BS-bootcamp/Graded Submissions/Capstone/CryptoClash/client/src/components/SecretWordSelection/SecretWordSelection.js"],"sourcesContent":["import './SecretWordSelection.css';\nimport React, { useState, useEffect } from 'react';\nimport socket from '../../socket';\nimport axios from 'axios';\n\nconst SecretWordSelection = ({ onFinish }) => {\n  const [wordOptions, setWordOptions] = useState([]);\n  const [selectedWord, setSelectedWord] = useState('');\n\n  useEffect(() => {\n    const fetchWordOptions = async () => {\n      try {\n        const response = await axios.get('https://api.datamuse.com/words?ml=cryptocurrency&max=5');\n        setWordOptions(response.data.map((wordObj) => wordObj.word));\n      } catch (error) {\n        console.error(`Error fetching word options: ${error}`);\n      }\n    };\n\n    fetchWordOptions();\n  }, []);\n\n  const handleSelectWord = (word) => {\n    setSelectedWord(word);\n    socket.emit('selectSecretWord', word);\n  };\n\n  return (\n    <div className=\"secret-word-selection\">\n      <h2>Select a secret word:</h2>\n      <ul>\n        {wordOptions.map((word) => (\n          <li key={word} onClick={() => handleSelectWord(word)}>\n            {word}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default SecretWordSelection;\n"],"mappings":";;AAAA,OAAO,2BAA2B;AAClC,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,mBAAmB,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACvC,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,MAAMa,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,wDAAwD,CAAC;QAC1FL,cAAc,CAACI,QAAQ,CAACE,IAAI,CAACC,GAAG,CAAEC,OAAO,IAAKA,OAAO,CAACC,IAAI,CAAC,CAAC;MAC9D,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAE,gCAA+BA,KAAM,EAAC,CAAC;MACxD;IACF,CAAC;IAEDP,gBAAgB,EAAE;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,gBAAgB,GAAIH,IAAI,IAAK;IACjCP,eAAe,CAACO,IAAI,CAAC;IACrBlB,MAAM,CAACsB,IAAI,CAAC,kBAAkB,EAAEJ,IAAI,CAAC;EACvC,CAAC;EAED,oBACEf,OAAA;IAAKoB,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCrB,OAAA;MAAAqB,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAC9BzB,OAAA;MAAAqB,QAAA,EACGhB,WAAW,CAACQ,GAAG,CAAEE,IAAI,iBACpBf,OAAA;QAAe0B,OAAO,EAAEA,CAAA,KAAMR,gBAAgB,CAACH,IAAI,CAAE;QAAAM,QAAA,EAClDN;MAAI,GADEA,IAAI;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAGd;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEV,CAAC;AAACtB,EAAA,CAlCIF,mBAAmB;AAAA0B,EAAA,GAAnB1B,mBAAmB;AAoCzB,eAAeA,mBAAmB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}