{"ast":null,"code":"var _jsxFileName = \"/Users/nevandsouza/Desktop/BS-bootcamp/Graded Submissions/Capstone/CryptoClash/client/src/components/Game/Gameboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Gameboard.css';\nimport socket from '../../socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GameBoard = () => {\n  _s();\n  const [codemastersWatching, setCodemastersWatching] = useState(false);\n  const [guesses, setGuesses] = useState([]);\n  const [timer, setTimer] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(0);\n  const [wordOptions, setWordOptions] = useState([]);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [submitted, setSubmitted] = useState(false);\n  useEffect(() => {\n    socket.on('codemastersWatching', () => {\n      setCodemastersWatching(true);\n    });\n    socket.on('startTimer', time => {\n      setTimer(time);\n      setTimeLeft(time);\n    });\n    socket.on('updateTimer', time => {\n      setTimeLeft(time);\n    });\n    socket.on('stopTimer', () => {\n      setTimer(null);\n      setTimeLeft(0);\n    });\n    socket.on('updateGuesses', newGuesses => {\n      setGuesses(newGuesses);\n    });\n    socket.on('updateWordOptions', options => {\n      setWordOptions(options);\n    });\n    return () => {\n      socket.off('codemastersWatching');\n      socket.off('startTimer');\n      socket.off('updateTimer');\n      socket.off('stopTimer');\n      socket.off('updateGuesses');\n      socket.off('updateWordOptions');\n    };\n  }, []);\n  const handleOptionSelect = option => {\n    setSelectedOption(option);\n  };\n  const handleSubmit = () => {\n    socket.emit('submitWord', selectedOption.word);\n    setSubmitted(true);\n  };\n  const renderGuesses = () => {\n    return guesses.map((guess, index) => {\n      let className = 'guess';\n      if (guess === 'green') {\n        className += ' green';\n      } else if (guess === 'yellow') {\n        className += ' yellow';\n      } else {\n        className += ' grey';\n      }\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: className\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 14\n      }, this);\n    });\n  };\n  const renderOptions = () => {\n    return wordOptions.map(option => {\n      const className = option === selectedOption ? 'choice selected' : 'choice';\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: className,\n        onClick: () => handleOptionSelect(option),\n        children: option.word\n      }, option.word, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-board\",\n    children: codemastersWatching ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"codemasters-watching\",\n      children: \"Codemasters are watching...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [timer !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer\",\n        children: [\"Time left: \", timeLeft, \" seconds\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"guesses\",\n        children: renderGuesses()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"word-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Secret Word:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          disabled: submitted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"choices\",\n        children: renderOptions()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), !submitted && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submit-button\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(GameBoard, \"eBR+dc6jATcE78srK4nfYBo6IK8=\");\n_c = GameBoard;\nexport default GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","useState","useEffect","socket","jsxDEV","_jsxDEV","Fragment","_Fragment","GameBoard","_s","codemastersWatching","setCodemastersWatching","guesses","setGuesses","timer","setTimer","timeLeft","setTimeLeft","wordOptions","setWordOptions","selectedOption","setSelectedOption","submitted","setSubmitted","on","time","newGuesses","options","off","handleOptionSelect","option","handleSubmit","emit","word","renderGuesses","map","guess","index","className","fileName","_jsxFileName","lineNumber","columnNumber","renderOptions","onClick","children","type","disabled","_c","$RefreshReg$"],"sources":["/Users/nevandsouza/Desktop/BS-bootcamp/Graded Submissions/Capstone/CryptoClash/client/src/components/Game/Gameboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Gameboard.css';\nimport socket from '../../socket';\n\nconst GameBoard = () => {\n  const [codemastersWatching, setCodemastersWatching] = useState(false);\n  const [guesses, setGuesses] = useState([]);\n  const [timer, setTimer] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(0);\n  const [wordOptions, setWordOptions] = useState([]);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [submitted, setSubmitted] = useState(false);\n\n  useEffect(() => {\n    socket.on('codemastersWatching', () => {\n      setCodemastersWatching(true);\n    });\n\n    socket.on('startTimer', (time) => {\n      setTimer(time);\n      setTimeLeft(time);\n    });\n\n    socket.on('updateTimer', (time) => {\n      setTimeLeft(time);\n    });\n\n    socket.on('stopTimer', () => {\n      setTimer(null);\n      setTimeLeft(0);\n    });\n\n    socket.on('updateGuesses', (newGuesses) => {\n      setGuesses(newGuesses);\n    });\n\n    socket.on('updateWordOptions', (options) => {\n      setWordOptions(options);\n    });\n\n    return () => {\n      socket.off('codemastersWatching');\n      socket.off('startTimer');\n      socket.off('updateTimer');\n      socket.off('stopTimer');\n      socket.off('updateGuesses');\n      socket.off('updateWordOptions');\n    };\n  }, []);\n\n  const handleOptionSelect = (option) => {\n    setSelectedOption(option);\n  };\n\n  const handleSubmit = () => {\n    socket.emit('submitWord', selectedOption.word);\n    setSubmitted(true);\n  };\n\n  const renderGuesses = () => {\n    return guesses.map((guess, index) => {\n      let className = 'guess';\n      if (guess === 'green') {\n        className += ' green';\n      } else if (guess === 'yellow') {\n        className += ' yellow';\n      } else {\n        className += ' grey';\n      }\n      return <div key={index} className={className}></div>;\n    });\n  };\n\n  const renderOptions = () => {\n    return wordOptions.map((option) => {\n      const className = option === selectedOption ? 'choice selected' : 'choice';\n      return (\n        <div\n          key={option.word}\n          className={className}\n          onClick={() => handleOptionSelect(option)}\n        >\n          {option.word}\n        </div>\n      );\n    });\n  };\n\n  return (\n    <div className=\"game-board\">\n      {codemastersWatching ? (\n        <div className=\"codemasters-watching\">Codemasters are watching...</div>\n      ) : (\n        <>\n          {timer !== null && (\n            <div className=\"timer\">\n              Time left: {timeLeft} seconds\n            </div>\n          )}\n          <div className=\"guesses\">\n            {renderGuesses()}\n          </div>\n          <div className=\"word-input\">\n            <label>Secret Word:</label>\n            <input type=\"text\" disabled={submitted} />\n          </div>\n          <div className=\"choices\">\n            {renderOptions()}\n          </div>\n          {!submitted && (\n            <div className=\"submit-button\" onClick={handleSubmit}>\n              Submit\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default GameBoard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}