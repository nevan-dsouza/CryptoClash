{"ast":null,"code":"var _jsxFileName = \"/Users/nevandsouza/Desktop/BS-bootcamp/Graded Submissions/Capstone/CryptoClash/client/src/components/Multiplayer/Multiplayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Multiplayer.css';\nimport socket from '../../socket';\nimport Header from '../Header/Header';\nimport SecretWordSelection from '../SecretWordSelection/SecretWordSelection';\nimport GuessingPhase from '../GuessingPhase/GuessingPhase';\nimport CodemastersWatching from '../CodemastersWatching/CodemastersWatching';\nimport WinnerPanel from '../WinnerPanel/WinnerPanel';\nimport TeammatesPanel from '../TeammatesPanel/TeammatesPanel';\nimport TeamChat from './TeamChat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Multiplayer = () => {\n  _s();\n  const [team, setTeam] = useState(null);\n  const [isSecretWordSelected, setIsSecretWordSelected] = useState(false);\n  const [decodersGuesses, setDecodersGuesses] = useState([]);\n  const [codemastersGuesses, setCodemastersGuesses] = useState([]);\n  const [isGameEnded, setIsGameEnded] = useState(false);\n  const [winningTeam, setWinningTeam] = useState(null);\n  const [players, setPlayers] = useState([]);\n  useEffect(() => {\n    // socket event listeners\n    socket.on('team', assignedTeam => {\n      setTeam(assignedTeam);\n    });\n    return () => {\n      socket.off('team');\n    };\n  }, []);\n  useEffect(() => {\n    socket.on('secretWordSelected', () => {\n      setIsSecretWordSelected(true);\n    });\n    return () => {\n      socket.off('secretWordSelected');\n    };\n  }, []);\n  useEffect(() => {\n    socket.on('decodersFeedback', _ref => {\n      let {\n        guess,\n        feedback\n      } = _ref;\n      setDecodersGuesses([...decodersGuesses, {\n        guess,\n        feedback\n      }]);\n    });\n    socket.on('codemastersFeedback', _ref2 => {\n      let {\n        guess,\n        feedback,\n        secretWord\n      } = _ref2;\n      setCodemastersGuesses([...codemastersGuesses, {\n        guess,\n        feedback\n      }]);\n    });\n    return () => {\n      socket.off('decodersFeedback');\n      socket.off('codemastersFeedback');\n    };\n  }, [decodersGuesses, codemastersGuesses]);\n  useEffect(() => {\n    socket.on('gameEnd', _ref3 => {\n      let {\n        room\n      } = _ref3;\n      setIsGameEnded(true);\n      setWinningTeam(room.scores.codemasters > room.scores.decoders ? 'codemasters' : 'decoders');\n    });\n    socket.on('players', players => {\n      setPlayers(players);\n    });\n    return () => {\n      socket.off('players');\n      socket.off('gameEnd');\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"multiplayer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"multiplayer__sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(TeammatesPanel, {\n        players: players\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TeamChat, {\n        team: team\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"multiplayer__main\",\n      children: [team && /*#__PURE__*/_jsxDEV(Header, {\n        team: team\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 18\n      }, this), team === \"codemasters\" && !isSecretWordSelected && /*#__PURE__*/_jsxDEV(SecretWordSelection, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), team === \"decoders\" && isSecretWordSelected && /*#__PURE__*/_jsxDEV(GuessingPhase, {\n        decodersGuesses: decodersGuesses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), team === \"codemasters\" && isSecretWordSelected && /*#__PURE__*/_jsxDEV(CodemastersWatching, {\n        codemastersGuesses: codemastersGuesses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), isGameEnded && /*#__PURE__*/_jsxDEV(WinnerPanel, {\n        winningTeam: winningTeam\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(Multiplayer, \"KK8TVnrxK/28phW/HZI4Y60mDOg=\");\n_c = Multiplayer;\nexport default Multiplayer;\nvar _c;\n$RefreshReg$(_c, \"Multiplayer\");","map":{"version":3,"names":["React","useState","useEffect","socket","Header","SecretWordSelection","GuessingPhase","CodemastersWatching","WinnerPanel","TeammatesPanel","TeamChat","jsxDEV","_jsxDEV","Multiplayer","_s","team","setTeam","isSecretWordSelected","setIsSecretWordSelected","decodersGuesses","setDecodersGuesses","codemastersGuesses","setCodemastersGuesses","isGameEnded","setIsGameEnded","winningTeam","setWinningTeam","players","setPlayers","on","assignedTeam","off","_ref","guess","feedback","_ref2","secretWord","_ref3","room","scores","codemasters","decoders","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nevandsouza/Desktop/BS-bootcamp/Graded Submissions/Capstone/CryptoClash/client/src/components/Multiplayer/Multiplayer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Multiplayer.css';\nimport socket from '../../socket';\nimport Header from '../Header/Header';\nimport SecretWordSelection from '../SecretWordSelection/SecretWordSelection';\nimport GuessingPhase from '../GuessingPhase/GuessingPhase';\nimport CodemastersWatching from '../CodemastersWatching/CodemastersWatching';\nimport WinnerPanel from '../WinnerPanel/WinnerPanel';\nimport TeammatesPanel from '../TeammatesPanel/TeammatesPanel';\nimport TeamChat from './TeamChat';\n\nconst Multiplayer = () => {\n  const [team, setTeam] = useState(null);\n  const [isSecretWordSelected, setIsSecretWordSelected] = useState(false);\n  const [decodersGuesses, setDecodersGuesses] = useState([]);\n  const [codemastersGuesses, setCodemastersGuesses] = useState([]);\n  const [isGameEnded, setIsGameEnded] = useState(false);\n  const [winningTeam, setWinningTeam] = useState(null);\n  const [players, setPlayers] = useState([]);\n\n  useEffect(() => {\n    // socket event listeners\n    socket.on('team', (assignedTeam) => {\n      setTeam(assignedTeam);\n    });\n\n    return () => {\n      socket.off('team');\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on('secretWordSelected', () => {\n      setIsSecretWordSelected(true);\n    });\n\n    return () => {\n      socket.off('secretWordSelected');\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on('decodersFeedback', ({ guess, feedback }) => {\n      setDecodersGuesses([...decodersGuesses, { guess, feedback }]);\n    });\n  \n    socket.on('codemastersFeedback', ({ guess, feedback, secretWord }) => {\n      setCodemastersGuesses([...codemastersGuesses, { guess, feedback }]);\n    });\n  \n    return () => {\n      socket.off('decodersFeedback');\n      socket.off('codemastersFeedback');\n    };\n\n  }, [decodersGuesses, codemastersGuesses]);\n\n  useEffect(() => {  \n    socket.on('gameEnd', ({ room }) => {\n      setIsGameEnded(true);\n      setWinningTeam(room.scores.codemasters > room.scores.decoders ? 'codemasters' : 'decoders');\n    });\n\n    socket.on('players', (players) => {\n      setPlayers(players);\n    });\n\n    return () => {\n      socket.off('players');\n      socket.off('gameEnd');\n    };\n  }, []);\n  \n\n  return (\n    <div className=\"multiplayer\">\n      <div className=\"multiplayer__sidebar\">\n        <TeammatesPanel players={players} />\n        <TeamChat team={team} />\n      </div>\n      <div className=\"multiplayer__main\">\n        {team && <Header team={team} />}\n        {team === \"codemasters\" && !isSecretWordSelected && (\n          <SecretWordSelection />\n        )}\n        {team === \"decoders\" && isSecretWordSelected && (\n          <GuessingPhase decodersGuesses={decodersGuesses} />\n        )}\n        {team === \"codemasters\" && isSecretWordSelected && (\n          <CodemastersWatching codemastersGuesses={codemastersGuesses} />\n        )}\n        {isGameEnded && <WinnerPanel winningTeam={winningTeam} />}\n      </div>\n    </div>\n  );\n};\n\nexport default Multiplayer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}