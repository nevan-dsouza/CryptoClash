{"ast":null,"code":"var _jsxFileName = \"/Users/nevandsouza/Desktop/BS-bootcamp/Graded Submissions/Capstone/CryptoClash/client/src/components/Lobby/Lobby.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Lobby.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Lobby = _ref => {\n  _s();\n  let {\n    players,\n    onReady\n  } = _ref;\n  const [teamAssignments, setTeamAssignments] = useState(players.map(() => ''));\n  const handleTeamSelect = (index, team) => {\n    setTeamAssignments(assignments => [...assignments.slice(0, index), team, ...assignments.slice(index + 1)]);\n  };\n  const handleReadyClick = () => {\n    const numPlayers = players.length;\n    const numTeams = new Set(teamAssignments).size;\n    if (numPlayers < 2) {\n      alert('You need at least 2 players to start the game.');\n    } else if (numTeams < 2) {\n      alert('You need at least 2 teams to start the game.');\n    } else if (teamAssignments.some(team => !team)) {\n      alert('You must assign a team to each player.');\n    } else {\n      onReady(teamAssignments);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lobby\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lobby\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-list\",\n      children: players.map((player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: player.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: teamAssignments[index],\n          onChange: e => handleTeamSelect(index, e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Choose team...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"CodeMasters\",\n            children: \"CodeMasters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Decoders\",\n            children: \"Decoders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, player.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReadyClick,\n      children: \"Ready to Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Lobby, \"jRGnB4hBPAGQVukntZGc86ULsjg=\");\n_c = Lobby;\nexport default Lobby;\nvar _c;\n$RefreshReg$(_c, \"Lobby\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Lobby","_ref","_s","players","onReady","teamAssignments","setTeamAssignments","map","handleTeamSelect","index","team","assignments","slice","handleReadyClick","numPlayers","length","numTeams","Set","size","alert","some","className","children","fileName","_jsxFileName","lineNumber","columnNumber","player","name","value","onChange","e","target","id","onClick","_c","$RefreshReg$"],"sources":["/Users/nevandsouza/Desktop/BS-bootcamp/Graded Submissions/Capstone/CryptoClash/client/src/components/Lobby/Lobby.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Lobby.css';\n\nconst Lobby = ({ players, onReady }) => {\n  const [teamAssignments, setTeamAssignments] = useState(players.map(() => ''));\n\n  const handleTeamSelect = (index, team) => {\n    setTeamAssignments(assignments => [\n      ...assignments.slice(0, index),\n      team,\n      ...assignments.slice(index + 1)\n    ]);\n  };\n\n  const handleReadyClick = () => {\n    const numPlayers = players.length;\n    const numTeams = new Set(teamAssignments).size;\n\n    if (numPlayers < 2) {\n      alert('You need at least 2 players to start the game.');\n    } else if (numTeams < 2) {\n      alert('You need at least 2 teams to start the game.');\n    } else if (teamAssignments.some(team => !team)) {\n      alert('You must assign a team to each player.');\n    } else {\n      onReady(teamAssignments);\n    }\n  };\n\n  return (\n    <div className=\"lobby\">\n      <h2>Lobby</h2>\n      <div className=\"player-list\">\n        {players.map((player, index) => (\n          <div key={player.id} className=\"player\">\n            <span>{player.name}</span>\n            <select value={teamAssignments[index]} onChange={e => handleTeamSelect(index, e.target.value)}>\n              <option value=\"\">Choose team...</option>\n              <option value=\"CodeMasters\">CodeMasters</option>\n              <option value=\"Decoders\">Decoders</option>\n            </select>\n          </div>\n        ))}\n      </div>\n      <button onClick={handleReadyClick}>Ready to Start</button>\n    </div>\n  );\n};\n\nexport default Lobby;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,KAAK,GAAGC,IAAA,IAA0B;EAAAC,EAAA;EAAA,IAAzB;IAAEC,OAAO;IAAEC;EAAQ,CAAC,GAAAH,IAAA;EACjC,MAAM,CAACI,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAACM,OAAO,CAACI,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC;EAE7E,MAAMC,gBAAgB,GAAGA,CAACC,KAAK,EAAEC,IAAI,KAAK;IACxCJ,kBAAkB,CAACK,WAAW,IAAI,CAChC,GAAGA,WAAW,CAACC,KAAK,CAAC,CAAC,EAAEH,KAAK,CAAC,EAC9BC,IAAI,EACJ,GAAGC,WAAW,CAACC,KAAK,CAACH,KAAK,GAAG,CAAC,CAAC,CAChC,CAAC;EACJ,CAAC;EAED,MAAMI,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,UAAU,GAAGX,OAAO,CAACY,MAAM;IACjC,MAAMC,QAAQ,GAAG,IAAIC,GAAG,CAACZ,eAAe,CAAC,CAACa,IAAI;IAE9C,IAAIJ,UAAU,GAAG,CAAC,EAAE;MAClBK,KAAK,CAAC,gDAAgD,CAAC;IACzD,CAAC,MAAM,IAAIH,QAAQ,GAAG,CAAC,EAAE;MACvBG,KAAK,CAAC,8CAA8C,CAAC;IACvD,CAAC,MAAM,IAAId,eAAe,CAACe,IAAI,CAACV,IAAI,IAAI,CAACA,IAAI,CAAC,EAAE;MAC9CS,KAAK,CAAC,wCAAwC,CAAC;IACjD,CAAC,MAAM;MACLf,OAAO,CAACC,eAAe,CAAC;IAC1B;EACF,CAAC;EAED,oBACEN,OAAA;IAAKsB,SAAS,EAAC,OAAO;IAAAC,QAAA,gBACpBvB,OAAA;MAAAuB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACd3B,OAAA;MAAKsB,SAAS,EAAC,aAAa;MAAAC,QAAA,EACzBnB,OAAO,CAACI,GAAG,CAAC,CAACoB,MAAM,EAAElB,KAAK,kBACzBV,OAAA;QAAqBsB,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBACrCvB,OAAA;UAAAuB,QAAA,EAAOK,MAAM,CAACC;QAAI;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ,eAC1B3B,OAAA;UAAQ8B,KAAK,EAAExB,eAAe,CAACI,KAAK,CAAE;UAACqB,QAAQ,EAAEC,CAAC,IAAIvB,gBAAgB,CAACC,KAAK,EAAEsB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAAAP,QAAA,gBAC5FvB,OAAA;YAAQ8B,KAAK,EAAC,EAAE;YAAAP,QAAA,EAAC;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS,eACxC3B,OAAA;YAAQ8B,KAAK,EAAC,aAAa;YAAAP,QAAA,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS,eAChD3B,OAAA;YAAQ8B,KAAK,EAAC,UAAU;YAAAP,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACnC;MAAA,GANDC,MAAM,CAACM,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAQpB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE,eACN3B,OAAA;MAAQmC,OAAO,EAAErB,gBAAiB;MAAAS,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACtD;AAEV,CAAC;AAACxB,EAAA,CA5CIF,KAAK;AAAAmC,EAAA,GAALnC,KAAK;AA8CX,eAAeA,KAAK;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}